// Generated by CoffeeScript 1.9.3
(function() {
  var FormUrlencoded, Http, MojioModelSDK, SignalR, _;

  Http = require('./HttpNodeWrapper');

  SignalR = require('./SignalRNodeWrapper');

  FormUrlencoded = require('form-urlencoded');

  _ = require('underscore');

  module.exports = MojioModelSDK = (function() {
    function MojioModelSDK(options) {
      if (options == null) {
        options = {};
      }
      MojioModelSDK.__super__.constructor.call(this, options);
    }

    MojioModelSDK.prototype.users = function(users, callback) {
      if ((callback != null)) {
        this.callback(callback);
      }
      return this;
    };

    MojioModelSDK.prototype.user = function(user, callback) {
      if ((callback != null)) {
        this.callback(callback);
      }
      return this;
    };

    MojioModelSDK.prototype.vehicles = function(vehicles, callback) {
      if ((callback != null)) {
        this.callback(callback);
      }
      return this;
    };

    MojioModelSDK.prototype.vehicle = function(vehicle, callback) {
      if ((callback != null)) {
        this.callback(callback);
      }
      return this;
    };

    MojioModelSDK.prototype.mojios = function(mojios, callback) {
      if ((callback != null)) {
        this.callback(callback);
      }
      return this;
    };

    MojioModelSDK.prototype.mojio = function(mojio, callback) {
      if ((callback != null)) {
        this.callback(callback);
      }
      return this;
    };

    MojioModelSDK.prototype.trips = function(trips, callback) {
      if ((callback != null)) {
        this.callback(callback);
      }
      return this;
    };

    MojioModelSDK.prototype.mock = function(callback) {
      if ((callback != null)) {
        this.callback(callback);
      }
      return this;
    };

    MojioModelSDK.prototype.callback = function(callback) {
      callback(null, true);
      return this;
    };

    return MojioModelSDK;

  })();

}).call(this);

//# sourceMappingURL=MojioModelSDK.js.map
